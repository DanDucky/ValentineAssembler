/INCLUDE=reset_carry.val

|save_return
LOD %STACK1 $\STACKPTR0
LOD %STACK2 $\STACKPTRPAGE
; stack is now set to the first byte of the stack ptr address
PUL %X
; grab the stack ptr
LOD %STACK1 $\STACKPTR1
PUL %Y
; grab the stack ptr page
MOV %X %STACK1
MOV %Y %STACK2
; move stack ptr to the current position
MOV %FLAGS %X
LOD %Y $10111111
AND
MOV %ACC %FLAGS
; set carry flag to 0

MOV %PC1 %X
LOD %Y $0 ; CHANGE TO CORRECT OFFSET
ADD ; get address offset
STR %ACC
MOV %PC2 %X
LOD %Y $0
ADD ; create new address
STS
MOV %ACC %STACK1

; currently:
; pc1: x
; pc2: x
; acc: x
; x: x
; y: x
; stack1: second address
; stack2: x
; stack1 internal: stackptr not incremented
; stack2 internal: stackptr not incremented

MOV %FLAGS %X
LOD %Y $10111111
AND
MOV %ACC %FLAGS
; set carry flag to 0

MOV %STACK1 %ACC
LDS
MOV %STACK1 %X
MOV %ACC %STACK1
LOD %Y $1
ADD
; currently:
; pc1: x
; pc2: x
; acc: incremented stack ptr
; x: stackptr not incremented (stack 1)
; y: 1
; stack1: address part 2
; stack2: stackptr not incremented (stack 2)
; stack1 internal: x
; stack2 internal: x

MOV %STACK1 %Y
MOV %ACC %STACK1

; currently:
; pc1: x
; pc2: x
; acc: x
; x: x
; y: second part of final address
; stack1: stackptr incremented
; stack2: stackptr not incremented
; stack1 internal: stackptr not incremented
; stack2 internal: stackptr not incremented

MOV %STACK2 %X
MOV %Y %STACK2
LOD %Y $0
ADD
MOV %STACK2 %X
MOV %ACC %STACK2
STR %X ; both addresses stored in memory in the right place

MOV %FLAGS %X
LOD %Y $10111111
AND
MOV %ACC %FLAGS
; set carry flag to 0

MOV %STACK1 %X
LOD %Y $1
ADD
MOV %ACC %STACK1
MOV %STACK2 %X
LOD %Y $0
ADD
MOV %ACC %STACK2

.return_last
LOD %STACK1 $\STACKPTR0
LOD %STACK2 $\STACKPTRPAGE
; stack is now set to the first byte of the stack ptr address
PUL %X
; grab the stack ptr
LOD %STACK1 $\STACKPTR1
PUL %Y
; grab the stack ptr page
MOV %X %STACK1
MOV %Y %STACK2
; move stack ptr to the current position

\reset_carry
; reset carry flag

MOV %STACK1 %X
LOD %Y $2
SUB
MOV %ACC %STACK1
MOV %STACK2 %X
LOD %Y $0
SUB
MOV %ACC %STACK2
PUL %ACC
MOV %STACK1 %X
MOV %STACK2 %Y
MOV %ACC %STACK1
MOV %Y %STACK2
STS
MOV %X %STACK1
\reset_carry
MOV %STACK1 %X
LOD %Y $1
ADD
LDS
MOV %STACK2 %Y
MOV %ACC %STACK2
LOD %X $0
ADD
MOV %STACK1 %X
MOV %STACK2 %STACK1
MOV %ACC %STACK2
PUL %Y
MPC